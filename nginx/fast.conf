# 添加 upstream 配置,把以下ip改成自己的源站ip,weight为权重
upstream backend {
    server 192.168.1.10:80 weight=3 max_fails=3 fail_timeout=10s;
    server 192.168.1.11:80 weight=1 max_fails=3 fail_timeout=10s;
    keepalive 32;
}

# HTTP 服务器 - 重定向到 HTTPS
server {
    listen 80;
    server_name fast.1111.com;
    return 301 https://$host$request_uri;
}

# HTTPS 服务器
server {
    listen 443 ssl;
    http2 on;
    server_name fast.1111.com;
    
    # SSL 证书配置
    ssl_certificate    /etc/nginx/certs/fast.1111.com_cert.pem;
    ssl_certificate_key    /etc/nginx/certs/fast.1111.com_key.pem;
    
    # 反向代理配置
    location / {
        # 反代使用以下方式
	proxy_pass http://backend;
	proxy_set_header Host backend.222.com;
	#set $upstream_endpoint https://backend.222.com;
    #proxy_pass $upstream_endpoint;
		
        # 故障转移配置
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_next_upstream_tries 3;
        
        # 基础缓存配置
        proxy_cache my_proxy_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$proxy_host$request_uri$is_args$args";

        # 缓存时间控制
        proxy_cache_valid 200 301 302 2h;
        proxy_cache_valid 404 1m;
        proxy_cache_valid 500 502 503 504 0;
        proxy_cache_valid any 30s;

        # 缓存行为控制
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

        # 缓存跳过控制
        proxy_cache_bypass $cookie_nocache $arg_nocache;
        proxy_no_cache $cookie_nocache $arg_nocache;

        # 缓存并发控制
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        proxy_cache_background_update on;
        
        # 添加安全头和缓存状态头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        #add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options nosniff always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Permissions-Policy "geolocation=(), microphone=()" always;
        add_header X-Cache-Status $upstream_cache_status always;
        
        # 设置头部传递真实 IP
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 启用 SNI 支持
        proxy_ssl_server_name on;
        proxy_ssl_name backend.222.com;
        proxy_ssl_verify off;
        
        # 禁用 Gzip 压缩以确保数据一致性
        gzip off;
        #proxy_set_header Accept-Encoding '*';
		
        # 域名替换
        sub_filter_once off;
        sub_filter 'backend.222.com' 'fast.1111.com';
        
        # 屏蔽源站安全头以及cf相关头
        proxy_hide_header Strict-Transport-Security;
        proxy_hide_header X-Frame-Options;
        proxy_hide_header X-Content-Type-Options;
        proxy_hide_header X-XSS-Protection;
        proxy_hide_header cf-ray;
        proxy_hide_header cf-cache-status;
        proxy_hide_header cf-apo-via;
        proxy_hide_header cf-connecting-ip;
        proxy_hide_header cf-request-id;
        proxy_hide_header cf-bgj;
        proxy_hide_header cf-polished;
        proxy_hide_header nel;
        proxy_hide_header report-to;
        proxy_hide_header expect-ct;
    }
    
    # 日志配置
    access_log /data/wwwlogs/fast.1111.com.access.log main buffer=32k flush=5s;
    error_log /data/wwwlogs/fast.1111.com.error.log error;
} 
